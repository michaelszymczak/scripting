#!/bin/bash

. ./table_shift.sh



##############################


test_should_prepare_mapping() {

  # given
  input="
a:b:1
a:c:2
a:b:3
b:c:4
a:c:5
d:e:6
"


  # when
  actual=$(generate_mapping "$input" ":" "1,2")


  # then
  expected="a:b => :
a:c => ::
b:c => :::
d:e => ::::"
  assertEquals "$expected" "$actual"
}

test_should_based_mapping_on_key_collumns_only() {

  # given
  input="
1@z@a@b@1
2@z@a@c@2
5@z@a@b@3
"


  # when
  actual=$(generate_mapping "$input" "@" "2,3,4")


  # then
  expected="z@a@b => @
z@a@c => @@"
  assertEquals "$expected" "$actual"
}



test_should_generate_header() {
  # given
  input="
0:z1:a:b:1
0:z1:a:c:2
0:z1:a:b:3
0:z1:b:c:4
0:z2:a:c:5
0:z2:d:e:6
"


  # when
  actual=$(generate_header "$input" ":" "3,4")


  # then
  assertEquals "::::a_b:a_c:b_c:d_e" "$actual"
}


test_should_shift_collumns() {

  input="0:z1:a:b:1
0:z1:a:c:2
0:z1:a:b:3
0:z1:b:c:4
0:z2:a:c:5
0:z2:d:e:6"

  expected="0:z1:::1
0:z1::::2
0:z1:::3
0:z1:::::4
0:z2::::5
0:z2::::::6"

  mapping=$(generate_mapping "$input" ":" "3,4")
  actual=$(echo "$input" | sed -f <(echo "$mapping" | sed 's/=> //;s# #/#;s#$#/#;s#^#s/#'))

  assertEquals "$expected" "$actual"
}

. shunit2

